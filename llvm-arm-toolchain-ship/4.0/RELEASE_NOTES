The following are the changes in the 4.0.10 release of the Snapdragon LLVM ARM
C/C++ Toolchain over the 4.0.9 release.

1. Fix handling of unsigned, smaller than integer size, loop induction 
   variables
2. In LTO, allow linking ARM and Thumb IR modules

The following are the changes in the 4.0.9 release of the Snapdragon LLVM ARM
C/C++ Toolchain over the 4.0.8 release.

1. Generate unaligned vector load/store instructions regardless of alignment 
   hint in source code
2. Fix compiler optimization that caused store reordering

The following are the changes in the 4.0.8 release of the Snapdragon LLVM ARM
C/C++ Toolchain over the 4.0.6 release.

1. Fix vectorizer corner case with overflow generation
2. Fix vectorizer issue when handling large constants
3. Fix bug related to unswitched callsite optimization when using LTO

The following are the changes in the 4.0.6 release of the Snapdragon LLVM ARM
C/C++ Toolchain over the 4.0.4 release.

1. Fix infinite/very long compilation times for ARM code generation
2. Fix incorrect handling of rint() library call

The following are the changes in the 4.0.4 release of the Snapdragon LLVM ARM
C/C++ Toolchain over the 4.0.3 release.

1. Suppress internal QC specific warnings for Android when -Weverything is 
   enabled
2. Disable undefined shift behavior warning by default for Android builds
3. Match behavior of tautological comparison warnings to Android LLVM in
   Android builds
4. Disable parsing of sanitizer flags during LTO compilation phase
5. Silently ignore unknown options passed to QC Linker during Android builds
6. Support export-dynamic-symbol option in QC Linker

The following are the changes in the 4.0.3 release of the Snapdragon LLVM ARM
C/C++ Toolchain over the 4.0.2 release.

1. Fix memory crash due to incorrect memory alignment
2. Fix the behavior of the '-Wno-tautological-compare' flag
3. Turn on warnings for Android targets that were accidently disabled
4. Fix sanitizer API issues

The following are the changes in the 4.0.2 release of the Snapdragon LLVM ARM
C/C++ Toolchain over the 4.0.1 release.

1. Fix buffer overflow caused in certain corner cases by a loop optimization
2. Fix compiler crash caused in certain corner cases by the inliner 
   optimization
3. Fix buffer overflow caused in certain corner cases by array optimization
4. Turn off auto vectorization when "-mno-implicit-float" is passed to prevent
   usage of floating point registers
5. Fix intermittent crashes in the linker on Windows when building static 
   executables or when using partial linking
6. Fix unexpected behavior in the linker when attempting to read Bitcode 
   files after LTO is complete

The following are the changes in the 4.0.1 release of the Snapdragon LLVM ARM
C/C++ Toolchain over the 4.0 release.

1.  Fix to create profile for PGO optimization in Android environment 
2.  Fix compiler error using "--compile-and-analyze-high" flag
3.  Fix spurious warnings about "break" statements in statement expressions
4.  Make Clang honor "__attribute((no_instrument_function))" with "-pg" flag
5.  Fix compiler errors with inline assembly on AArch64
6.  Add missing scan-build post processing script to Windows host toolchain
7.  Fix false warning for "undefined optimiziation" for store to null.
8.  Fix Clang version string formatting
9.  Add rwpi compiler-rt library variant for armv7m
10. Fix the binary output for llvm-elf-to-hex on Windows host
11. Add --symbols option for YAML map parser
12. Linker fix for overflow detection on certain relocations
13. Suppress dereference nullptr warnings. A majority of these warnings are 
    false-positives and do not contain debug information.

This is the Snapdragon LLVM ARM C/C++ compiler toolchain 4.0 release. This is 
a cross toolchain built to run on x86 64-bit Ubuntu Linux (versions 12.04 and
later). The Snapdragon LLVM ARM Compiler will only generate code for ARM 
targets and will not generate code for any of the other targets supported by
the AOSP LLVM compiler.

Version 4.0 of the Snapdragon LLVM ARM Compiler includes all changes in the 
llvm.org 4.0 release, and additionally includes patches that are post-4.0 
llvm.org release. This version of the Snapdragon LLVM ARM toolchain includes 
proprietary features and optimizations that are not available in the llvm.org
release or the AOSP LLVM compiler.

The Snapdragon LLVM ARM Compiler uses the integrated assembler for assembling
and includes a full featured proprietary linker (QC Linker) for linking. For 
Android, the QC Linker is primarily used for Link Time Optimization (LTO).

The link below contains all the new features in the llvm.org 4.0 release.
http://releases.llvm.org/4.0.0/docs/ReleaseNotes.html

The Snapdragon LLVM ARM 4.0 toolchain contains all the above features, and 
additionally contains the following key features compared to the SDLLVM 3.9 
release:

1. Compiler Features
  - Improvements to armv7/aarch32 vector code generation
  - Code size optimizations
2. Security/Code Hygiene
  - Support for whitelisting directories for static analyzer
  - Allow blacklisting of bugs using an external file in static analyzer
  - New options for specifying priority of static analyzer checkers 
  - Availability of post processing script for Windows host platform
  - New options for running the Static Analyzer on performance mode
  - New checkers added to static analyzer

This version of the Snapdragon LLVM ARM toolchain may generate additional 
front-end warnings compared to the SDLLVM 3.9 version.  However, we expect
it to be better performing than the 3.9 release.  We recommend using this 
version for performance critical components (where possible).

Please contact your Qualcomm Android support POC for more details or 
documentation.
